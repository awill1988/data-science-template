PYENV := $(shell python3 -c "import sys; print('.venv' + '.'.join(str(x) for x in sys.version_info[:2]))")
PYSRC := src

# Setup environments

python-setup: $(PYENV)/bin/python3 # Setup a Python virtual environment
	@:

$(PYENV)/bin/python3:
	python3 -m venv $(PYENV)
	$(PYENV)/bin/pip install --upgrade pip wheel setuptools
	$(PYENV)/bin/pip install -r requirements/dev.txt --exists-action i

.PHONY: clean-python
clean-python: # Clean the python environment
	@rm -r $(PYENV) .mypy_cache .pytest_cache .coverage dist build || true
	@find . -type d -name "__pycache__" -exec rm -r {} + || true
	@find . -type d -name ".cache" -exec rm -r {} + || true
	@find . -type d -name ".data" -exec rm -r {} + || true
	@find . -type d -name "*.egg-info" -exec rm -r {} + || true
	@find . -type d -name ".ipynb_checkpoints" -exec rm -r {} + || true

.PHONY: lint-python
lint-python: python-setup # Run flake8 and black to lint Python code
	$(PYENV)/bin/python3 -m flake8 $(PYSRC) $(PYSRC)/tests
	$(PYENV)/bin/python3 -m black --check --exclude \(\.venv.\*\)\|\(.eggs\) $(PYSRC) $(PYSRC)/tests
	$(PYENV)/bin/python3 -m mypy $(PYSRC)/

.PHONY: fmt-python
fmt-python: python-setup # Run black to format Python code
	$(PYENV)/bin/python3 -m black --exclude \(\.venv.\*\)\|\(.eggs\) $(PYSRC) $(PYSRC)/tests

.PHONY: test-python
test-python: python-setup # Run all Python tests
	$(PYENV)/bin/py.test

build-python: python-setup # Build the Python library
	$(PYENV)/bin/pip install .
